# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-09-25 14:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import filer.fields.image
import parler.models
import shuup.front.apps.carousel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0007_auto_20161016_1055'),
        ('shuup', '0001_initial'),
        ('shuup_simple_cms', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The carousel name use for carousel configuration.', max_length=50, verbose_name='name')),
                ('animation', enumfields.fields.EnumIntegerField(default=0, enum=shuup.front.apps.carousel.models.CarouselMode, help_text='Animation type for cycling slides.', verbose_name='animation')),
                ('interval', models.IntegerField(default=5, help_text='Slide interval in seconds.', verbose_name='interval')),
                ('pause_on_hover', models.BooleanField(default=True, help_text='When checked, the carousel cycling pauses on mouse over.', verbose_name='pause on hover')),
                ('is_arrows_visible', models.BooleanField(default=True, help_text='When checked, navigational arrows are shown on the carousel allowing for customers to go back and forward.', verbose_name='show navigation arrows')),
                ('use_dot_navigation', models.BooleanField(default=True, help_text='When checked, navigational indicator dots are shown.', verbose_name='show navigation dots')),
                ('image_width', models.IntegerField(default=1200, help_text='Slide images will be cropped to this width.', verbose_name='image width')),
                ('image_height', models.IntegerField(default=600, help_text='Slide images will be cropped to this height.', verbose_name='image height')),
            ],
            options={
                'verbose_name': 'Carousel',
                'verbose_name_plural': 'Carousels',
            },
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name is only used to configure slides.', max_length=50, null=True, verbose_name='name')),
                ('ordering', models.IntegerField(blank=True, default=0, help_text='Set the numeric order in which this slide should appear relative to other slides in this carousel.', null=True, verbose_name='ordering')),
                ('target', enumfields.fields.EnumIntegerField(default=0, enum=shuup.front.apps.carousel.models.LinkTargetType, help_text='Set this to current if clicking on this slide should open a new browser tab.', verbose_name='link target')),
                ('available_from', models.DateTimeField(blank=True, help_text='Set the date and time from which this slide should be visible in the carousel. This is useful to advertise sales campaigns or other time-sensitive marketing.', null=True, verbose_name='available from')),
                ('available_to', models.DateTimeField(blank=True, help_text='Set the date and time from which this slide should be visible in the carousel. This is useful to advertise sales campaigns or other time-sensitive marketing.', null=True, verbose_name='available to')),
                ('carousel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='carousel.Carousel')),
                ('category_link', models.ForeignKey(blank=True, help_text='Set the product category page that should be shown when this slide is clicked, if any.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='shuup.Category', verbose_name='category link')),
                ('cms_page_link', models.ForeignKey(blank=True, help_text='Set the web page that should be shown when the slide is clicked, if any.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='shuup_simple_cms.Page', verbose_name='cms page link')),
                ('product_link', models.ForeignKey(blank=True, help_text='Set the product detail page that should be shown when this slide is clicked, if any.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='shuup.Product', verbose_name='product link')),
            ],
            options={
                'ordering': ('ordering', 'id'),
                'verbose_name': 'Slide',
                'verbose_name_plural': 'Slides',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SlideTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('caption', models.CharField(blank=True, help_text='Text that describes the image. Used for search engine purposes.', max_length=80, null=True, verbose_name='caption')),
                ('caption_text', models.TextField(blank=True, help_text='When displayed in banner box mode, caption text is shown as a tooltip', null=True, verbose_name='caption text')),
                ('external_link', models.CharField(blank=True, help_text='Set the external site that should be shown when this slide is clicked, if any.', max_length=160, null=True, verbose_name='external link')),
                ('image', filer.fields.image.FilerImageField(blank=True, help_text='The slide image to show.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='filer.Image', verbose_name='image')),
                ('master', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='carousel.Slide')),
            ],
            options={
                'managed': True,
                'db_table': 'carousel_slide_translation',
                'db_tablespace': '',
                'default_permissions': (),
                'verbose_name': 'Slide Translation',
            },
        ),
        migrations.AlterUniqueTogether(
            name='slidetranslation',
            unique_together=set([('language_code', 'master')]),
        ),
    ]
